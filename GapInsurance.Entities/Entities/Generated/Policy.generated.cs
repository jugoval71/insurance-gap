//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace GapInsurance.Entities
{
   public partial class Policy
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Policy()
      {
         PolicyTypes = new System.Collections.ObjectModel.Collection<GapInsurance.Entities.PolicyType>();

         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="_name"></param>
      /// <param name="_description"></param>
      /// <param name="_startdate"></param>
      /// <param name="_durationmonths"></param>
      /// <param name="_price"></param>
      /// <param name="_risk"></param>
      /// <param name="_user"></param>
      public Policy(string _name, string _description, DateTime _startdate, int _durationmonths, decimal _price, GapInsurance.Entities.RiskType _risk, string _user)
      {
         if (string.IsNullOrEmpty(_name)) throw new ArgumentNullException(nameof(_name));
         Name = _name;
         if (string.IsNullOrEmpty(_description)) throw new ArgumentNullException(nameof(_description));
         Description = _description;
         StartDate = _startdate;
         DurationMonths = _durationmonths;
         Price = _price;
         Risk = _risk;
         if (string.IsNullOrEmpty(_user)) throw new ArgumentNullException(nameof(_user));
         User = _user;
         PolicyTypes = new Collection<GapInsurance.Entities.PolicyType>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="_name"></param>
      /// <param name="_description"></param>
      /// <param name="_startdate"></param>
      /// <param name="_durationmonths"></param>
      /// <param name="_price"></param>
      /// <param name="_risk"></param>
      /// <param name="_user"></param>
      public static Policy Create(string _name, string _description, DateTime _startdate, int _durationmonths, decimal _price, GapInsurance.Entities.RiskType _risk, string _user)
      {
         return new Policy(_name, _description, _startdate, _durationmonths, _price, _risk, _user);
      }

      // Persistent properties

      /// <summary>
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public Guid Id { get; set; }

      /// <summary>
      /// Required, Max length = 20
      /// </summary>
      [Required]
      [MaxLength(20)]
      public string Name { get; set; }

      /// <summary>
      /// Required, Max length = 200
      /// </summary>
      [Required]
      [MaxLength(200)]
      public string Description { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DateTime StartDate { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public int DurationMonths { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public decimal Price { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public GapInsurance.Entities.RiskType Risk { get; set; }

      /// <summary>
      /// Required, Max length = 20
      /// </summary>
      [Required]
      [MaxLength(20)]
      public string User { get; set; }

      // Persistent navigation properties

      public virtual ICollection<GapInsurance.Entities.PolicyType> PolicyTypes { get; set; }

   }
}

