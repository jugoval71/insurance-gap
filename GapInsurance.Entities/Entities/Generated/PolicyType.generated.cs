//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace GapInsurance.Entities
{
   public partial class PolicyType
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected PolicyType()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="_comment"></param>
      /// <param name="_coverage"></param>
      /// <param name="_policy0"></param>
      /// <param name="_type1"></param>
      public PolicyType(string _comment, decimal _coverage, GapInsurance.Entities.Policy _policy0, GapInsurance.Entities.Type _type1)
      {
         if (string.IsNullOrEmpty(_comment)) throw new ArgumentNullException(nameof(_comment));
         Comment = _comment;
         Coverage = _coverage;
         if (_policy0 == null) throw new ArgumentNullException(nameof(_policy0));
         _policy0.PolicyTypes.Add(this);

         if (_type1 == null) throw new ArgumentNullException(nameof(_type1));
         _type1.PolicyTypes.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="_comment"></param>
      /// <param name="_coverage"></param>
      /// <param name="_policy0"></param>
      /// <param name="_type1"></param>
      public static PolicyType Create(string _comment, decimal _coverage, GapInsurance.Entities.Policy _policy0, GapInsurance.Entities.Type _type1)
      {
         return new PolicyType(_comment, _coverage, _policy0, _type1);
      }

      // Persistent properties

      /// <summary>
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public Guid Id { get; set; }

      /// <summary>
      /// Required, Max length = 100
      /// </summary>
      [Required]
      [MaxLength(100)]
      public string Comment { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public decimal Coverage { get; set; }

      // Persistent navigation properties

   }
}

